apiVersion: v1
kind: Pod
metadata:
  labels:
    k8s-app: metrics-server
    pod-template-hash: 547dc87f5f
    version: v0.3.6
  name: metrics-server-v0.3.6-547dc87f5f-wnd4c
  namespace: kube-system
spec:
  containers:
  - command:
    - /metrics-server
    - --metric-resolution=30s
    - --kubelet-port=10255
    - --deprecated-kubelet-completely-insecure=true
    - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
    image: k8s.gcr.io/metrics-server-amd64:v0.3.6
    imagePullPolicy: IfNotPresent
    name: metrics-server
    ports:
    - containerPort: 443
      name: https
      protocol: TCP
    resources:
      limits:
        cpu: 43m
        memory: 55Mi
      requests:
        cpu: 43m
        memory: 55Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: metrics-server-token-hrrmm
      readOnly: true
  - command:
    - /pod_nanny
    - --config-dir=/etc/config
    - --cpu=40m
    - --extra-cpu=0.5m
    - --memory=35Mi
    - --extra-memory=4Mi
    - --threshold=5
    - --deployment=metrics-server-v0.3.6
    - --container=metrics-server
    - --poll-period=300000
    - --estimator=exponential
    - --scale-down-delay=24h
    - --minClusterSize=5
    env:
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: gke.gcr.io/addon-resizer:1.8.8-gke.1
    imagePullPolicy: IfNotPresent
    name: metrics-server-nanny
    resources:
      limits:
        cpu: 100m
        memory: 300Mi
      requests:
        cpu: 5m
        memory: 50Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/config
      name: metrics-server-config-volume
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: metrics-server-token-hrrmm
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: gke-sprintqa-my-k8s-a6a7d003-26tg
  nodeSelector:
    kubernetes.io/os: linux
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: metrics-server
  serviceAccountName: metrics-server
  terminationGracePeriodSeconds: 30
  tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
  - key: components.gke.io/gke-managed-components
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - configMap:
      defaultMode: 420
      name: metrics-server-config
    name: metrics-server-config-volume
  - name: metrics-server-token-hrrmm
    secret:
      defaultMode: 420
      secretName: metrics-server-token-hrrmm
